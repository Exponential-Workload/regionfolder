#!/usr/bin/env bash
set -e

command_exists() {
  command -v "$@" > /dev/null 2>&1;
}
ensure_command_exists() {
  if ! command_exists "$@"; then
    echo "$@ is not installed. Please install it and try again."
    exit 1
  fi;
}
ensure_command_exists git
ensure_command_exists jq
ensure_command_exists pnpm
ensure_command_exists prettier

export FROM="$(git describe --tags --abbrev=0)"

POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
  case $1 in
    -f|--from)
      FROM="$2"
      if [[ "$FROM" == "" ]]; then
        echo "$1 requires a release as an argument" 1>&2;
        exit 1;
      fi
      shift # past argument
      shift # past value
      ;;
    -p|prerelease)
      export PRERELEASE=true
      shift # past argument
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done
set -- "${POSITIONAL_ARGS[@]}"

export RELEASE="$1"
if [[ "$RELEASE" == "" ]]; then
  echo "Usage: $0 <release-name> [--from <last-release>] [--prerelease]" 1>&2;
  exit 1;
fi
# if release starts with `v`, remove it
if [[ "$RELEASE" == v* ]]; then
  export RELEASE="${RELEASE:1}"
fi;

CHANGELOGEN_ARGS=();
if [[ "$PRERELEASE" == "true" ]]; then
  CHANGELOGEN_ARGS+=("--prerelease")
fi;

rm -rf /tmp/changelog.md
pnpm changelogen --from "$FROM" ${CHANGELOGEN_ARGS[@]} -r "$RELEASE" --output /tmp/changelog.md

sed -i 's/# Changelog//g' /tmp/changelog.md
if [[ "$PRERELEASE" == "true" ]]; then
  sed -i 's/## '"$RELEASE"'/## '"$RELEASE"' (Prerelease)/g' /tmp/changelog.md
fi;
echo "Please review/modify the changelog as you please, then exit your editor to continue..."
prettier -w /tmp/changelog.md
sleep 0.5;
(command_exists $EDITOR && $EDITOR /tmp/changelog.md) || (command_exists codium && codium --wait /tmp/changelog.md) || (command_exists code && code --wait /tmp/changelog.md) || (nano /tmp/changelog.md)
CHANGELOG="$(cat /tmp/changelog.md)"
rm /tmp/changelog.md

cp CHANGELOG.md /tmp/changelog.md
sed -i 's/# Changelog//g' /tmp/changelog.md
echo -e "# Changelog

$CHANGELOG
$(cat /tmp/changelog.md)" > CHANGELOG.md
rm /tmp/changelog.md

prettier -w CHANGELOG.md

jq '.version="'"$RELEASE"'"' package.json > /tmp/package.json
mv /tmp/package.json package.json

git add package.json CHANGELOG.md
git commit -m "chore(release): v$RELEASE

Changelog:
$CHANGELOG

Released by $(git config user.name) ($(git config user.email))"

git tag -s "v$RELEASE" -m "Changelog:
$(sed 's/#/>/g' <<< "$CHANGELOG")"
git push origin
git push origin --tag
